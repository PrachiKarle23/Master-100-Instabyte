class Solution {
public:
    bool canFinish(int numCourses, vector<vector<int>>& prerequisites) {
        int n=prerequisites.size();
        vector<int>indegree(numCourses,0);
        unordered_map<int,set<int>>adj;
        for(int i=0;i<n;i++)
        {
           adj[prerequisites[i][1]].insert(prerequisites[i][0]);   
        }
         
        queue<int>q;
        for(auto i:adj)
        {
            for(auto j:adj[i.first])
            {
                indegree[j]++;
            }
        }
        
        for(int i=0;i<numCourses;i++)
        {
              if(indegree[i]==0)
              {
                 q.push(i);
              }
        }
        int cnt=0;
        while(!q.empty())
        {
           int f=q.front();
           q.pop();
           cnt++;
           for(auto i:adj[f])
           {
              indegree[i]--;
              if(indegree[i]==0){
                q.push(i);
              }
           }
        }
        if(cnt==numCourses){
            return true;
        }
        return false;
    }
};
