class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        vector<int> a;
        priority_queue<pair<int, int>> pq;
        unordered_map<int, int> mp;
        for (int i = 0; i < nums.size(); i++) {
            mp[nums[i]]++;
        }

        for (auto i : mp) {
            pq.push({i.second, i.first});
        }

        mp.clear();
        int cnt = 0;
        while (cnt != k && !pq.empty()) {
            pair<int, int> p = pq.top();
            pq.pop();
            a.push_back(p.second);
            cnt++;
        }
        return a;
    }
};
