class Solution {
public:
    void solve(vector<int>& candidates, vector<int> a, int sum, int target,
               int i, vector<vector<int>>& ans) {
        if (i >= candidates.size()) {
            if (sum == target && a.size() != 0) {
                ans.push_back(a);
            }
            return;
        }
        if (sum == target && a.size() != 0) {
            ans.push_back(a);
            return;
        }
        if (sum > target) {
            return;
        }

        sum += candidates[i];
        a.push_back(candidates[i]);
        solve(candidates, a, sum, target, i, ans);
        a.pop_back();
        sum -= candidates[i];

        solve(candidates, a, sum, target, i + 1, ans);
    }
    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
        vector<vector<int>> ans;
        vector<int> a;
        int sum = 0;
        solve(candidates, a, sum, target, 0, ans);
        return ans;
    }
};
